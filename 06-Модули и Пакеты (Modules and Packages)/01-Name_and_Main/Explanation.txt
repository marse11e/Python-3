В некоторых случаях, когда Вы выполняете импорт из модуля, Вам может понадобиться узнать,
используется ли функция модуля для импорта, или же Вы используете сам файл
.py этого модуля. Чтобы проверить это, Вы можете использовать такое условие:

      if __name__ == "__main__":

Например:

Когда Ваш скрипт выполняется из командной строки с помощью интерпретатора Python:

    python myscript.py

то выполняется весь код, который находится на нулевом уровне отступа. Функции
и классы создаются, но они только создаются - их код не выполняется.
В отличие от других языков программирования, здесь нет функции main(), которая бы
автоматически запускалась - неявно этой функцией является весь код на верхнем уровне отступа.

В этом случае, код на верхнем уровне отступа это блок if.  __name__ это встроенная переменная,
которая содержит название текущего модуля. Однако, если модуль выполняется напрямую,
(как в примере myscript.py выше), то вместо этого __name__ принимает значение "__main__". 
Таким образом, Вы можете проверить, запускается ли Ваш скрипт напрямую,
или же он импортируется откуда-то еще. Для этого можно сделать такую проверку:

    if __name__ == "__main__":
        ...

Если этот код импортируется в другой модуль, то определения функций и классов импортируется, но код main() не выполняется. В качестве примера, рассмотрим два скрипта:

    # file one.py
    def func():
        print("func() выполняется в one.py")

    print("print верхнего уровня в one.py")

    if __name__ == "__main__":
        print("one.py запускается напрямую")
    else:
        print("one.py импортируется в другой модуль")

и затем:

    # file two.py
    import one

    print("print верхнего уровня в two.py")
    one.func()

    if __name__ == "__main__":
        print("two.py запускается напрямую")
    else:
        print("two.py импортируется в другой модуль")

Теперь, если Вы запускаете интерпретатор вот так:

    python one.py

то результат будет таким:

    print верхнего уровня в one.py

one.py запускается напрямую

Если вместо этого Вы запускаете two.py:

    python two.py

то получите

  print верхнего уровня в one.py
  one.py импортируется в другой модуль
  print верхнего уровня в two.py
  func() выполняется в one.py
  two.py запускается напрямую
  
Таким образом, когда модуль one загружается, его имя __name__ равно "one", а не __main__.
